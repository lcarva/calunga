---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/absl-py/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: absl-py
    pipelines.appstudio.openshift.io/type: build
  name: absl-py-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/absl-py:{{revision}}
  - name: path-context
    value: packages/absl-py
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/absl-py/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/absl-py",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/adal/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: adal
    pipelines.appstudio.openshift.io/type: build
  name: adal-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/adal:{{revision}}
  - name: path-context
    value: packages/adal
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/adal/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/adal",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/aiobotocore/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: aiobotocore
    pipelines.appstudio.openshift.io/type: build
  name: aiobotocore-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/aiobotocore:{{revision}}
  - name: path-context
    value: packages/aiobotocore
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/aiobotocore/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/aiobotocore",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/aiofiles/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: aiofiles
    pipelines.appstudio.openshift.io/type: build
  name: aiofiles-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/aiofiles:{{revision}}
  - name: path-context
    value: packages/aiofiles
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/aiofiles/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/aiofiles",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/aiohappyeyeballs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: aiohappyeyeballs
    pipelines.appstudio.openshift.io/type: build
  name: aiohappyeyeballs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/aiohappyeyeballs:{{revision}}
  - name: path-context
    value: packages/aiohappyeyeballs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/aiohappyeyeballs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/aiohappyeyeballs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/aiohttp/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: aiohttp
    pipelines.appstudio.openshift.io/type: build
  name: aiohttp-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/aiohttp:{{revision}}
  - name: path-context
    value: packages/aiohttp
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/aiohttp/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/aiohttp",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/aioitertools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: aioitertools
    pipelines.appstudio.openshift.io/type: build
  name: aioitertools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/aioitertools:{{revision}}
  - name: path-context
    value: packages/aioitertools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/aioitertools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/aioitertools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/annotated-types/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: annotated-types
    pipelines.appstudio.openshift.io/type: build
  name: annotated-types-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/annotated-types:{{revision}}
  - name: path-context
    value: packages/annotated-types
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/annotated-types/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/annotated-types",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/anyio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: anyio
    pipelines.appstudio.openshift.io/type: build
  name: anyio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/anyio:{{revision}}
  - name: path-context
    value: packages/anyio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/anyio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/anyio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/appdirs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: appdirs
    pipelines.appstudio.openshift.io/type: build
  name: appdirs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/appdirs:{{revision}}
  - name: path-context
    value: packages/appdirs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/appdirs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/appdirs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/argcomplete/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: argcomplete
    pipelines.appstudio.openshift.io/type: build
  name: argcomplete-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/argcomplete:{{revision}}
  - name: path-context
    value: packages/argcomplete
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/argcomplete/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/argcomplete",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/argon2-cffi/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: argon2-cffi
    pipelines.appstudio.openshift.io/type: build
  name: argon2-cffi-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/argon2-cffi:{{revision}}
  - name: path-context
    value: packages/argon2-cffi
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/argon2-cffi/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/argon2-cffi",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/arrow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: arrow
    pipelines.appstudio.openshift.io/type: build
  name: arrow-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/arrow:{{revision}}
  - name: path-context
    value: packages/arrow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/arrow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/arrow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/asgiref/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: asgiref
    pipelines.appstudio.openshift.io/type: build
  name: asgiref-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/asgiref:{{revision}}
  - name: path-context
    value: packages/asgiref
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/asgiref/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/asgiref",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/asn1crypto/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: asn1crypto
    pipelines.appstudio.openshift.io/type: build
  name: asn1crypto-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/asn1crypto:{{revision}}
  - name: path-context
    value: packages/asn1crypto
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/asn1crypto/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/asn1crypto",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/astroid/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: astroid
    pipelines.appstudio.openshift.io/type: build
  name: astroid-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/astroid:{{revision}}
  - name: path-context
    value: packages/astroid
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/astroid/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/astroid",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/asttokens/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: asttokens
    pipelines.appstudio.openshift.io/type: build
  name: asttokens-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/asttokens:{{revision}}
  - name: path-context
    value: packages/asttokens
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/asttokens/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/asttokens",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/async-timeout/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: async-timeout
    pipelines.appstudio.openshift.io/type: build
  name: async-timeout-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/async-timeout:{{revision}}
  - name: path-context
    value: packages/async-timeout
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/async-timeout/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/async-timeout",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/attrs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: attrs
    pipelines.appstudio.openshift.io/type: build
  name: attrs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/attrs:{{revision}}
  - name: path-context
    value: packages/attrs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/attrs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/attrs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/authlib/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: authlib
    pipelines.appstudio.openshift.io/type: build
  name: authlib-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/authlib:{{revision}}
  - name: path-context
    value: packages/authlib
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/authlib/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/authlib",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/aws-lambda-powertools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: aws-lambda-powertools
    pipelines.appstudio.openshift.io/type: build
  name: aws-lambda-powertools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/aws-lambda-powertools:{{revision}}
  - name: path-context
    value: packages/aws-lambda-powertools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/aws-lambda-powertools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/aws-lambda-powertools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/awscli/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: awscli
    pipelines.appstudio.openshift.io/type: build
  name: awscli-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/awscli:{{revision}}
  - name: path-context
    value: packages/awscli
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/awscli/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/awscli",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/azure-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: azure-core
    pipelines.appstudio.openshift.io/type: build
  name: azure-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/azure-core:{{revision}}
  - name: path-context
    value: packages/azure-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/azure-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/azure-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/azure-identity/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: azure-identity
    pipelines.appstudio.openshift.io/type: build
  name: azure-identity-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/azure-identity:{{revision}}
  - name: path-context
    value: packages/azure-identity
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/azure-identity/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/azure-identity",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/azure-keyvault-secrets/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: azure-keyvault-secrets
    pipelines.appstudio.openshift.io/type: build
  name: azure-keyvault-secrets-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/azure-keyvault-secrets:{{revision}}
  - name: path-context
    value: packages/azure-keyvault-secrets
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/azure-keyvault-secrets/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/azure-keyvault-secrets",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/azure-storage-blob/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: azure-storage-blob
    pipelines.appstudio.openshift.io/type: build
  name: azure-storage-blob-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/azure-storage-blob:{{revision}}
  - name: path-context
    value: packages/azure-storage-blob
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/azure-storage-blob/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/azure-storage-blob",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/azure-storage-file-datalake/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: azure-storage-file-datalake
    pipelines.appstudio.openshift.io/type: build
  name: azure-storage-file-datalake-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/azure-storage-file-datalake:{{revision}}
  - name: path-context
    value: packages/azure-storage-file-datalake
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/azure-storage-file-datalake/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/azure-storage-file-datalake",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/backoff/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: backoff
    pipelines.appstudio.openshift.io/type: build
  name: backoff-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/backoff:{{revision}}
  - name: path-context
    value: packages/backoff
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/backoff/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/backoff",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/backports-tarfile/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: backports-tarfile
    pipelines.appstudio.openshift.io/type: build
  name: backports-tarfile-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/backports-tarfile:{{revision}}
  - name: path-context
    value: packages/backports-tarfile
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/backports-tarfile/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/backports-tarfile",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/beautifulsoup4/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: beautifulsoup4
    pipelines.appstudio.openshift.io/type: build
  name: beautifulsoup4-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/beautifulsoup4:{{revision}}
  - name: path-context
    value: packages/beautifulsoup4
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/beautifulsoup4/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/beautifulsoup4",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/black/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: black
    pipelines.appstudio.openshift.io/type: build
  name: black-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/black:{{revision}}
  - name: path-context
    value: packages/black
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/black/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/black",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/blinker/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: blinker
    pipelines.appstudio.openshift.io/type: build
  name: blinker-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/blinker:{{revision}}
  - name: path-context
    value: packages/blinker
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/blinker/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/blinker",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/bokeh/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: bokeh
    pipelines.appstudio.openshift.io/type: build
  name: bokeh-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/bokeh:{{revision}}
  - name: path-context
    value: packages/bokeh
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/bokeh/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/bokeh",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/boto3/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: boto3
    pipelines.appstudio.openshift.io/type: build
  name: boto3-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/boto3:{{revision}}
  - name: path-context
    value: packages/boto3
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/boto3/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/boto3",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/botocore/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: botocore
    pipelines.appstudio.openshift.io/type: build
  name: botocore-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/botocore:{{revision}}
  - name: path-context
    value: packages/botocore
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/botocore/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/botocore",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/build/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: build
    pipelines.appstudio.openshift.io/type: build
  name: build-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/build:{{revision}}
  - name: path-context
    value: packages/build
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/build/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/build",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cachecontrol/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cachecontrol
    pipelines.appstudio.openshift.io/type: build
  name: cachecontrol-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cachecontrol:{{revision}}
  - name: path-context
    value: packages/cachecontrol
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cachecontrol/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cachecontrol",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cachetools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cachetools
    pipelines.appstudio.openshift.io/type: build
  name: cachetools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cachetools:{{revision}}
  - name: path-context
    value: packages/cachetools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cachetools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cachetools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/calver/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: calver
    pipelines.appstudio.openshift.io/type: build
  name: calver-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/calver:{{revision}}
  - name: path-context
    value: packages/calver
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/calver/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/calver",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cffi/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cffi
    pipelines.appstudio.openshift.io/type: build
  name: cffi-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cffi:{{revision}}
  - name: path-context
    value: packages/cffi
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cffi/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cffi",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cfgv/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cfgv
    pipelines.appstudio.openshift.io/type: build
  name: cfgv-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cfgv:{{revision}}
  - name: path-context
    value: packages/cfgv
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cfgv/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cfgv",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/chardet/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: chardet
    pipelines.appstudio.openshift.io/type: build
  name: chardet-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/chardet:{{revision}}
  - name: path-context
    value: packages/chardet
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/chardet/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/chardet",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/charset-normalizer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: charset-normalizer
    pipelines.appstudio.openshift.io/type: build
  name: charset-normalizer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/charset-normalizer:{{revision}}
  - name: path-context
    value: packages/charset-normalizer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/charset-normalizer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/charset-normalizer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cleo/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cleo
    pipelines.appstudio.openshift.io/type: build
  name: cleo-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cleo:{{revision}}
  - name: path-context
    value: packages/cleo
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cleo/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cleo",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/click/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: click
    pipelines.appstudio.openshift.io/type: build
  name: click-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/click:{{revision}}
  - name: path-context
    value: packages/click
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/click/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/click",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/click-plugins/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: click-plugins
    pipelines.appstudio.openshift.io/type: build
  name: click-plugins-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/click-plugins:{{revision}}
  - name: path-context
    value: packages/click-plugins
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/click-plugins/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/click-plugins",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cloudpickle/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cloudpickle
    pipelines.appstudio.openshift.io/type: build
  name: cloudpickle-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cloudpickle:{{revision}}
  - name: path-context
    value: packages/cloudpickle
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cloudpickle/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cloudpickle",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/colorama/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: colorama
    pipelines.appstudio.openshift.io/type: build
  name: colorama-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/colorama:{{revision}}
  - name: path-context
    value: packages/colorama
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/colorama/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/colorama",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/comm/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: comm
    pipelines.appstudio.openshift.io/type: build
  name: comm-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/comm:{{revision}}
  - name: path-context
    value: packages/comm
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/comm/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/comm",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/coverage/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: coverage
    pipelines.appstudio.openshift.io/type: build
  name: coverage-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/coverage:{{revision}}
  - name: path-context
    value: packages/coverage
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/coverage/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/coverage",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/crashtest/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: crashtest
    pipelines.appstudio.openshift.io/type: build
  name: crashtest-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/crashtest:{{revision}}
  - name: path-context
    value: packages/crashtest
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/crashtest/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/crashtest",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/croniter/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: croniter
    pipelines.appstudio.openshift.io/type: build
  name: croniter-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/croniter:{{revision}}
  - name: path-context
    value: packages/croniter
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/croniter/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/croniter",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cycler/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cycler
    pipelines.appstudio.openshift.io/type: build
  name: cycler-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cycler:{{revision}}
  - name: path-context
    value: packages/cycler
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cycler/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cycler",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/databricks-sdk/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: databricks-sdk
    pipelines.appstudio.openshift.io/type: build
  name: databricks-sdk-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/databricks-sdk:{{revision}}
  - name: path-context
    value: packages/databricks-sdk
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/databricks-sdk/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/databricks-sdk",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/databricks-sql-connector/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: databricks-sql-connector
    pipelines.appstudio.openshift.io/type: build
  name: databricks-sql-connector-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/databricks-sql-connector:{{revision}}
  - name: path-context
    value: packages/databricks-sql-connector
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/databricks-sql-connector/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/databricks-sql-connector",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/dataclasses-json/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: dataclasses-json
    pipelines.appstudio.openshift.io/type: build
  name: dataclasses-json-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/dataclasses-json:{{revision}}
  - name: path-context
    value: packages/dataclasses-json
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/dataclasses-json/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/dataclasses-json",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/debugpy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: debugpy
    pipelines.appstudio.openshift.io/type: build
  name: debugpy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/debugpy:{{revision}}
  - name: path-context
    value: packages/debugpy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/debugpy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/debugpy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/decorator/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: decorator
    pipelines.appstudio.openshift.io/type: build
  name: decorator-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/decorator:{{revision}}
  - name: path-context
    value: packages/decorator
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/decorator/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/decorator",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/deepdiff/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: deepdiff
    pipelines.appstudio.openshift.io/type: build
  name: deepdiff-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/deepdiff:{{revision}}
  - name: path-context
    value: packages/deepdiff
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/deepdiff/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/deepdiff",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/defusedxml/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: defusedxml
    pipelines.appstudio.openshift.io/type: build
  name: defusedxml-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/defusedxml:{{revision}}
  - name: path-context
    value: packages/defusedxml
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/defusedxml/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/defusedxml",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/deprecated/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: deprecated
    pipelines.appstudio.openshift.io/type: build
  name: deprecated-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/deprecated:{{revision}}
  - name: path-context
    value: packages/deprecated
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/deprecated/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/deprecated",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/distlib/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: distlib
    pipelines.appstudio.openshift.io/type: build
  name: distlib-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/distlib:{{revision}}
  - name: path-context
    value: packages/distlib
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/distlib/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/distlib",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/distro/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: distro
    pipelines.appstudio.openshift.io/type: build
  name: distro-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/distro:{{revision}}
  - name: path-context
    value: packages/distro
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/distro/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/distro",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/django/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: django
    pipelines.appstudio.openshift.io/type: build
  name: django-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/django:{{revision}}
  - name: path-context
    value: packages/django
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/django/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/django",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/dnspython/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: dnspython
    pipelines.appstudio.openshift.io/type: build
  name: dnspython-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/dnspython:{{revision}}
  - name: path-context
    value: packages/dnspython
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/dnspython/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/dnspython",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/docker/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: docker
    pipelines.appstudio.openshift.io/type: build
  name: docker-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/docker:{{revision}}
  - name: path-context
    value: packages/docker
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/docker/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/docker",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/docstring-parser/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: docstring-parser
    pipelines.appstudio.openshift.io/type: build
  name: docstring-parser-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/docstring-parser:{{revision}}
  - name: path-context
    value: packages/docstring-parser
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/docstring-parser/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/docstring-parser",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/docutils/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: docutils
    pipelines.appstudio.openshift.io/type: build
  name: docutils-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/docutils:{{revision}}
  - name: path-context
    value: packages/docutils
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/docutils/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/docutils",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/dulwich/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: dulwich
    pipelines.appstudio.openshift.io/type: build
  name: dulwich-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/dulwich:{{revision}}
  - name: path-context
    value: packages/dulwich
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/dulwich/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/dulwich",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/durationpy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: durationpy
    pipelines.appstudio.openshift.io/type: build
  name: durationpy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/durationpy:{{revision}}
  - name: path-context
    value: packages/durationpy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/durationpy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/durationpy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/editables/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: editables
    pipelines.appstudio.openshift.io/type: build
  name: editables-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/editables:{{revision}}
  - name: path-context
    value: packages/editables
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/editables/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/editables",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/elasticsearch/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: elasticsearch
    pipelines.appstudio.openshift.io/type: build
  name: elasticsearch-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/elasticsearch:{{revision}}
  - name: path-context
    value: packages/elasticsearch
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/elasticsearch/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/elasticsearch",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/email-validator/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: email-validator
    pipelines.appstudio.openshift.io/type: build
  name: email-validator-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/email-validator:{{revision}}
  - name: path-context
    value: packages/email-validator
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/email-validator/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/email-validator",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/et-xmlfile/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: et-xmlfile
    pipelines.appstudio.openshift.io/type: build
  name: et-xmlfile-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/et-xmlfile:{{revision}}
  - name: path-context
    value: packages/et-xmlfile
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/et-xmlfile/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/et-xmlfile",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/exceptiongroup/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: exceptiongroup
    pipelines.appstudio.openshift.io/type: build
  name: exceptiongroup-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/exceptiongroup:{{revision}}
  - name: path-context
    value: packages/exceptiongroup
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/exceptiongroup/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/exceptiongroup",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/execnet/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: execnet
    pipelines.appstudio.openshift.io/type: build
  name: execnet-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/execnet:{{revision}}
  - name: path-context
    value: packages/execnet
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/execnet/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/execnet",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/executing/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: executing
    pipelines.appstudio.openshift.io/type: build
  name: executing-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/executing:{{revision}}
  - name: path-context
    value: packages/executing
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/executing/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/executing",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/faker/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: faker
    pipelines.appstudio.openshift.io/type: build
  name: faker-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/faker:{{revision}}
  - name: path-context
    value: packages/faker
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/faker/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/faker",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/fastapi/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: fastapi
    pipelines.appstudio.openshift.io/type: build
  name: fastapi-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/fastapi:{{revision}}
  - name: path-context
    value: packages/fastapi
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/fastapi/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/fastapi",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/fastavro/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: fastavro
    pipelines.appstudio.openshift.io/type: build
  name: fastavro-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/fastavro:{{revision}}
  - name: path-context
    value: packages/fastavro
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/fastavro/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/fastavro",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/filelock/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: filelock
    pipelines.appstudio.openshift.io/type: build
  name: filelock-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/filelock:{{revision}}
  - name: path-context
    value: packages/filelock
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/filelock/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/filelock",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/findpython/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: findpython
    pipelines.appstudio.openshift.io/type: build
  name: findpython-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/findpython:{{revision}}
  - name: path-context
    value: packages/findpython
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/findpython/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/findpython",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/flake8/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: flake8
    pipelines.appstudio.openshift.io/type: build
  name: flake8-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/flake8:{{revision}}
  - name: path-context
    value: packages/flake8
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/flake8/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/flake8",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/flatbuffers/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: flatbuffers
    pipelines.appstudio.openshift.io/type: build
  name: flatbuffers-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/flatbuffers:{{revision}}
  - name: path-context
    value: packages/flatbuffers
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/flatbuffers/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/flatbuffers",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/fqdn/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: fqdn
    pipelines.appstudio.openshift.io/type: build
  name: fqdn-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/fqdn:{{revision}}
  - name: path-context
    value: packages/fqdn
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/fqdn/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/fqdn",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/freezegun/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: freezegun
    pipelines.appstudio.openshift.io/type: build
  name: freezegun-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/freezegun:{{revision}}
  - name: path-context
    value: packages/freezegun
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/freezegun/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/freezegun",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/frozenlist/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: frozenlist
    pipelines.appstudio.openshift.io/type: build
  name: frozenlist-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/frozenlist:{{revision}}
  - name: path-context
    value: packages/frozenlist
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/frozenlist/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/frozenlist",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/fsspec/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: fsspec
    pipelines.appstudio.openshift.io/type: build
  name: fsspec-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/fsspec:{{revision}}
  - name: path-context
    value: packages/fsspec
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/fsspec/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/fsspec",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/gevent/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: gevent
    pipelines.appstudio.openshift.io/type: build
  name: gevent-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/gevent:{{revision}}
  - name: path-context
    value: packages/gevent
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/gevent/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/gevent",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/gitdb/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: gitdb
    pipelines.appstudio.openshift.io/type: build
  name: gitdb-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/gitdb:{{revision}}
  - name: path-context
    value: packages/gitdb
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/gitdb/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/gitdb",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/gitpython/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: gitpython
    pipelines.appstudio.openshift.io/type: build
  name: gitpython-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/gitpython:{{revision}}
  - name: path-context
    value: packages/gitpython
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/gitpython/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/gitpython",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-ads/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-ads
    pipelines.appstudio.openshift.io/type: build
  name: google-ads-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-ads:{{revision}}
  - name: path-context
    value: packages/google-ads
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-ads/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-ads",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-api-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-api-core
    pipelines.appstudio.openshift.io/type: build
  name: google-api-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-api-core:{{revision}}
  - name: path-context
    value: packages/google-api-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-api-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-api-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-api-python-client/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-api-python-client
    pipelines.appstudio.openshift.io/type: build
  name: google-api-python-client-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-api-python-client:{{revision}}
  - name: path-context
    value: packages/google-api-python-client
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-api-python-client/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-api-python-client",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-auth/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-auth
    pipelines.appstudio.openshift.io/type: build
  name: google-auth-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-auth:{{revision}}
  - name: path-context
    value: packages/google-auth
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-auth/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-auth",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-aiplatform/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-aiplatform
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-aiplatform-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-aiplatform:{{revision}}
  - name: path-context
    value: packages/google-cloud-aiplatform
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-aiplatform/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-aiplatform",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-audit-log/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-audit-log
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-audit-log-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-audit-log:{{revision}}
  - name: path-context
    value: packages/google-cloud-audit-log
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-audit-log/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-audit-log",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-bigquery/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-bigquery
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-bigquery-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-bigquery:{{revision}}
  - name: path-context
    value: packages/google-cloud-bigquery
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-bigquery/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-bigquery",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-bigquery-storage/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-bigquery-storage
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-bigquery-storage-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-bigquery-storage:{{revision}}
  - name: path-context
    value: packages/google-cloud-bigquery-storage
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-bigquery-storage/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-bigquery-storage",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-bigtable/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-bigtable
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-bigtable-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-bigtable:{{revision}}
  - name: path-context
    value: packages/google-cloud-bigtable
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-bigtable/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-bigtable",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-dataproc/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-dataproc
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-dataproc-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-dataproc:{{revision}}
  - name: path-context
    value: packages/google-cloud-dataproc
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-dataproc/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-dataproc",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-logging/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-logging
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-logging-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-logging:{{revision}}
  - name: path-context
    value: packages/google-cloud-logging
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-logging/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-logging",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-pubsub/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-pubsub
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-pubsub-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-pubsub:{{revision}}
  - name: path-context
    value: packages/google-cloud-pubsub
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-pubsub/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-pubsub",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-resource-manager/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-resource-manager
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-resource-manager-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-resource-manager:{{revision}}
  - name: path-context
    value: packages/google-cloud-resource-manager
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-resource-manager/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-resource-manager",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-storage/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-storage
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-storage-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-storage:{{revision}}
  - name: path-context
    value: packages/google-cloud-storage
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-storage/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-storage",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-cloud-vision/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-cloud-vision
    pipelines.appstudio.openshift.io/type: build
  name: google-cloud-vision-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-cloud-vision:{{revision}}
  - name: path-context
    value: packages/google-cloud-vision
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-cloud-vision/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-cloud-vision",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/google-crc32c/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: google-crc32c
    pipelines.appstudio.openshift.io/type: build
  name: google-crc32c-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/google-crc32c:{{revision}}
  - name: path-context
    value: packages/google-crc32c
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/google-crc32c/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/google-crc32c",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/googleapis-common-protos/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: googleapis-common-protos
    pipelines.appstudio.openshift.io/type: build
  name: googleapis-common-protos-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/googleapis-common-protos:{{revision}}
  - name: path-context
    value: packages/googleapis-common-protos
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/googleapis-common-protos/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/googleapis-common-protos",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/graphql-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: graphql-core
    pipelines.appstudio.openshift.io/type: build
  name: graphql-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/graphql-core:{{revision}}
  - name: path-context
    value: packages/graphql-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/graphql-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/graphql-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/graphviz/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: graphviz
    pipelines.appstudio.openshift.io/type: build
  name: graphviz-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/graphviz:{{revision}}
  - name: path-context
    value: packages/graphviz
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/graphviz/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/graphviz",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/greenlet/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: greenlet
    pipelines.appstudio.openshift.io/type: build
  name: greenlet-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/greenlet:{{revision}}
  - name: path-context
    value: packages/greenlet
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/greenlet/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/greenlet",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/grpcio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: grpcio
    pipelines.appstudio.openshift.io/type: build
  name: grpcio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/grpcio:{{revision}}
  - name: path-context
    value: packages/grpcio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/grpcio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/grpcio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/grpcio-health-checking/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: grpcio-health-checking
    pipelines.appstudio.openshift.io/type: build
  name: grpcio-health-checking-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/grpcio-health-checking:{{revision}}
  - name: path-context
    value: packages/grpcio-health-checking
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/grpcio-health-checking/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/grpcio-health-checking",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/grpcio-status/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: grpcio-status
    pipelines.appstudio.openshift.io/type: build
  name: grpcio-status-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/grpcio-status:{{revision}}
  - name: path-context
    value: packages/grpcio-status
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/grpcio-status/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/grpcio-status",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/grpcio-tools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: grpcio-tools
    pipelines.appstudio.openshift.io/type: build
  name: grpcio-tools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/grpcio-tools:{{revision}}
  - name: path-context
    value: packages/grpcio-tools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/grpcio-tools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/grpcio-tools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/gunicorn/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: gunicorn
    pipelines.appstudio.openshift.io/type: build
  name: gunicorn-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/gunicorn:{{revision}}
  - name: path-context
    value: packages/gunicorn
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/gunicorn/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/gunicorn",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/h11/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: h11
    pipelines.appstudio.openshift.io/type: build
  name: h11-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/h11:{{revision}}
  - name: path-context
    value: packages/h11
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/h11/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/h11",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/h2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: h2
    pipelines.appstudio.openshift.io/type: build
  name: h2-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/h2:{{revision}}
  - name: path-context
    value: packages/h2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/h2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/h2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hatch-fancy-pypi-readme/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatch-fancy-pypi-readme
    pipelines.appstudio.openshift.io/type: build
  name: hatch-fancy-pypi-readme-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatch-fancy-pypi-readme:{{revision}}
  - name: path-context
    value: packages/hatch-fancy-pypi-readme
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatch-fancy-pypi-readme/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatch-fancy-pypi-readme",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hatch-vcs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatch-vcs
    pipelines.appstudio.openshift.io/type: build
  name: hatch-vcs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatch-vcs:{{revision}}
  - name: path-context
    value: packages/hatch-vcs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatch-vcs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatch-vcs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hatchling/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatchling
    pipelines.appstudio.openshift.io/type: build
  name: hatchling-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatchling:{{revision}}
  - name: path-context
    value: packages/hatchling
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatchling/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatchling",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hpack/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hpack
    pipelines.appstudio.openshift.io/type: build
  name: hpack-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hpack:{{revision}}
  - name: path-context
    value: packages/hpack
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hpack/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hpack",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/httpcore/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httpcore
    pipelines.appstudio.openshift.io/type: build
  name: httpcore-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httpcore:{{revision}}
  - name: path-context
    value: packages/httpcore
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httpcore/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httpcore",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/httplib2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httplib2
    pipelines.appstudio.openshift.io/type: build
  name: httplib2-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httplib2:{{revision}}
  - name: path-context
    value: packages/httplib2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httplib2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httplib2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/httptools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httptools
    pipelines.appstudio.openshift.io/type: build
  name: httptools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httptools:{{revision}}
  - name: path-context
    value: packages/httptools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httptools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httptools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/httpx/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httpx
    pipelines.appstudio.openshift.io/type: build
  name: httpx-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httpx:{{revision}}
  - name: path-context
    value: packages/httpx
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httpx/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httpx",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/humanize/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: humanize
    pipelines.appstudio.openshift.io/type: build
  name: humanize-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/humanize:{{revision}}
  - name: path-context
    value: packages/humanize
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/humanize/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/humanize",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hvac/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hvac
    pipelines.appstudio.openshift.io/type: build
  name: hvac-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hvac:{{revision}}
  - name: path-context
    value: packages/hvac
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hvac/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hvac",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hyperframe/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hyperframe
    pipelines.appstudio.openshift.io/type: build
  name: hyperframe-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hyperframe:{{revision}}
  - name: path-context
    value: packages/hyperframe
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hyperframe/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hyperframe",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/identify/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: identify
    pipelines.appstudio.openshift.io/type: build
  name: identify-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/identify:{{revision}}
  - name: path-context
    value: packages/identify
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/identify/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/identify",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/idna/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: idna
    pipelines.appstudio.openshift.io/type: build
  name: idna-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/idna:{{revision}}
  - name: path-context
    value: packages/idna
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/idna/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/idna",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/imageio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: imageio
    pipelines.appstudio.openshift.io/type: build
  name: imageio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/imageio:{{revision}}
  - name: path-context
    value: packages/imageio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/imageio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/imageio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/importlib-metadata/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: importlib-metadata
    pipelines.appstudio.openshift.io/type: build
  name: importlib-metadata-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/importlib-metadata:{{revision}}
  - name: path-context
    value: packages/importlib-metadata
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/importlib-metadata/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/importlib-metadata",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/importlib-resources/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: importlib-resources
    pipelines.appstudio.openshift.io/type: build
  name: importlib-resources-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/importlib-resources:{{revision}}
  - name: path-context
    value: packages/importlib-resources
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/importlib-resources/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/importlib-resources",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/inflection/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: inflection
    pipelines.appstudio.openshift.io/type: build
  name: inflection-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/inflection:{{revision}}
  - name: path-context
    value: packages/inflection
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/inflection/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/inflection",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/iniconfig/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: iniconfig
    pipelines.appstudio.openshift.io/type: build
  name: iniconfig-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/iniconfig:{{revision}}
  - name: path-context
    value: packages/iniconfig
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/iniconfig/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/iniconfig",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/installer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: installer
    pipelines.appstudio.openshift.io/type: build
  name: installer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/installer:{{revision}}
  - name: path-context
    value: packages/installer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/installer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/installer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/ipython/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: ipython
    pipelines.appstudio.openshift.io/type: build
  name: ipython-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/ipython:{{revision}}
  - name: path-context
    value: packages/ipython
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/ipython/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/ipython",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/isodate/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: isodate
    pipelines.appstudio.openshift.io/type: build
  name: isodate-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/isodate:{{revision}}
  - name: path-context
    value: packages/isodate
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/isodate/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/isodate",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/isoduration/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: isoduration
    pipelines.appstudio.openshift.io/type: build
  name: isoduration-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/isoduration:{{revision}}
  - name: path-context
    value: packages/isoduration
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/isoduration/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/isoduration",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/isort/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: isort
    pipelines.appstudio.openshift.io/type: build
  name: isort-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/isort:{{revision}}
  - name: path-context
    value: packages/isort
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/isort/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/isort",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/itsdangerous/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: itsdangerous
    pipelines.appstudio.openshift.io/type: build
  name: itsdangerous-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/itsdangerous:{{revision}}
  - name: path-context
    value: packages/itsdangerous
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/itsdangerous/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/itsdangerous",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jaraco-context/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jaraco-context
    pipelines.appstudio.openshift.io/type: build
  name: jaraco-context-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jaraco-context:{{revision}}
  - name: path-context
    value: packages/jaraco-context
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jaraco-context/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jaraco-context",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jaraco-functools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jaraco-functools
    pipelines.appstudio.openshift.io/type: build
  name: jaraco-functools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jaraco-functools:{{revision}}
  - name: path-context
    value: packages/jaraco-functools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jaraco-functools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jaraco-functools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jeepney/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jeepney
    pipelines.appstudio.openshift.io/type: build
  name: jeepney-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jeepney:{{revision}}
  - name: path-context
    value: packages/jeepney
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jeepney/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jeepney",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jinja2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jinja2
    pipelines.appstudio.openshift.io/type: build
  name: jinja2-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jinja2:{{revision}}
  - name: path-context
    value: packages/jinja2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jinja2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jinja2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jmespath/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jmespath
    pipelines.appstudio.openshift.io/type: build
  name: jmespath-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jmespath:{{revision}}
  - name: path-context
    value: packages/jmespath
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jmespath/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jmespath",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/joblib/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: joblib
    pipelines.appstudio.openshift.io/type: build
  name: joblib-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/joblib:{{revision}}
  - name: path-context
    value: packages/joblib
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/joblib/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/joblib",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/json5/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: json5
    pipelines.appstudio.openshift.io/type: build
  name: json5-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/json5:{{revision}}
  - name: path-context
    value: packages/json5
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/json5/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/json5",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jsonpatch/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jsonpatch
    pipelines.appstudio.openshift.io/type: build
  name: jsonpatch-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jsonpatch:{{revision}}
  - name: path-context
    value: packages/jsonpatch
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jsonpatch/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jsonpatch",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jsonpointer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jsonpointer
    pipelines.appstudio.openshift.io/type: build
  name: jsonpointer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jsonpointer:{{revision}}
  - name: path-context
    value: packages/jsonpointer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jsonpointer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jsonpointer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jupyter-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jupyter-core
    pipelines.appstudio.openshift.io/type: build
  name: jupyter-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jupyter-core:{{revision}}
  - name: path-context
    value: packages/jupyter-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jupyter-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jupyter-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/keras/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: keras
    pipelines.appstudio.openshift.io/type: build
  name: keras-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/keras:{{revision}}
  - name: path-context
    value: packages/keras
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/keras/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/keras",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/kiwisolver/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: kiwisolver
    pipelines.appstudio.openshift.io/type: build
  name: kiwisolver-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/kiwisolver:{{revision}}
  - name: path-context
    value: packages/kiwisolver
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/kiwisolver/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/kiwisolver",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/langchain-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: langchain-core
    pipelines.appstudio.openshift.io/type: build
  name: langchain-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/langchain-core:{{revision}}
  - name: path-context
    value: packages/langchain-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/langchain-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/langchain-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/lazy-object-proxy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: lazy-object-proxy
    pipelines.appstudio.openshift.io/type: build
  name: lazy-object-proxy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/lazy-object-proxy:{{revision}}
  - name: path-context
    value: packages/lazy-object-proxy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/lazy-object-proxy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/lazy-object-proxy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/limits/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: limits
    pipelines.appstudio.openshift.io/type: build
  name: limits-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/limits:{{revision}}
  - name: path-context
    value: packages/limits
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/limits/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/limits",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/loguru/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: loguru
    pipelines.appstudio.openshift.io/type: build
  name: loguru-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/loguru:{{revision}}
  - name: path-context
    value: packages/loguru
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/loguru/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/loguru",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/lxml/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: lxml
    pipelines.appstudio.openshift.io/type: build
  name: lxml-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/lxml:{{revision}}
  - name: path-context
    value: packages/lxml
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/lxml/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/lxml",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/lz4/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: lz4
    pipelines.appstudio.openshift.io/type: build
  name: lz4-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/lz4:{{revision}}
  - name: path-context
    value: packages/lz4
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/lz4/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/lz4",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mako/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mako
    pipelines.appstudio.openshift.io/type: build
  name: mako-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mako:{{revision}}
  - name: path-context
    value: packages/mako
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mako/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mako",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/markdown/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markdown
    pipelines.appstudio.openshift.io/type: build
  name: markdown-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markdown:{{revision}}
  - name: path-context
    value: packages/markdown
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markdown/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markdown",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/markdown-it-py/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markdown-it-py
    pipelines.appstudio.openshift.io/type: build
  name: markdown-it-py-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markdown-it-py:{{revision}}
  - name: path-context
    value: packages/markdown-it-py
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markdown-it-py/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markdown-it-py",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/markupsafe/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markupsafe
    pipelines.appstudio.openshift.io/type: build
  name: markupsafe-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markupsafe:{{revision}}
  - name: path-context
    value: packages/markupsafe
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markupsafe/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markupsafe",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/marshmallow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: marshmallow
    pipelines.appstudio.openshift.io/type: build
  name: marshmallow-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/marshmallow:{{revision}}
  - name: path-context
    value: packages/marshmallow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/marshmallow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/marshmallow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/matplotlib-inline/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: matplotlib-inline
    pipelines.appstudio.openshift.io/type: build
  name: matplotlib-inline-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/matplotlib-inline:{{revision}}
  - name: path-context
    value: packages/matplotlib-inline
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/matplotlib-inline/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/matplotlib-inline",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mccabe/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mccabe
    pipelines.appstudio.openshift.io/type: build
  name: mccabe-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mccabe:{{revision}}
  - name: path-context
    value: packages/mccabe
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mccabe/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mccabe",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mdurl/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mdurl
    pipelines.appstudio.openshift.io/type: build
  name: mdurl-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mdurl:{{revision}}
  - name: path-context
    value: packages/mdurl
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mdurl/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mdurl",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/meson-python/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: meson-python
    pipelines.appstudio.openshift.io/type: build
  name: meson-python-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/meson-python:{{revision}}
  - name: path-context
    value: packages/meson-python
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/meson-python/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/meson-python",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/microsoft-kiota-http/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: microsoft-kiota-http
    pipelines.appstudio.openshift.io/type: build
  name: microsoft-kiota-http-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/microsoft-kiota-http:{{revision}}
  - name: path-context
    value: packages/microsoft-kiota-http
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/microsoft-kiota-http/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/microsoft-kiota-http",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mistune/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mistune
    pipelines.appstudio.openshift.io/type: build
  name: mistune-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mistune:{{revision}}
  - name: path-context
    value: packages/mistune
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mistune/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mistune",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mock/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mock
    pipelines.appstudio.openshift.io/type: build
  name: mock-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mock:{{revision}}
  - name: path-context
    value: packages/mock
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mock/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mock",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/more-itertools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: more-itertools
    pipelines.appstudio.openshift.io/type: build
  name: more-itertools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/more-itertools:{{revision}}
  - name: path-context
    value: packages/more-itertools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/more-itertools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/more-itertools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mpmath/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mpmath
    pipelines.appstudio.openshift.io/type: build
  name: mpmath-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mpmath:{{revision}}
  - name: path-context
    value: packages/mpmath
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mpmath/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mpmath",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/msal-extensions/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: msal-extensions
    pipelines.appstudio.openshift.io/type: build
  name: msal-extensions-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/msal-extensions:{{revision}}
  - name: path-context
    value: packages/msal-extensions
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/msal-extensions/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/msal-extensions",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/msgpack/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: msgpack
    pipelines.appstudio.openshift.io/type: build
  name: msgpack-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/msgpack:{{revision}}
  - name: path-context
    value: packages/msgpack
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/msgpack/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/msgpack",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/multidict/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: multidict
    pipelines.appstudio.openshift.io/type: build
  name: multidict-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/multidict:{{revision}}
  - name: path-context
    value: packages/multidict
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/multidict/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/multidict",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/multiprocess/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: multiprocess
    pipelines.appstudio.openshift.io/type: build
  name: multiprocess-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/multiprocess:{{revision}}
  - name: path-context
    value: packages/multiprocess
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/multiprocess/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/multiprocess",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mypy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mypy
    pipelines.appstudio.openshift.io/type: build
  name: mypy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mypy:{{revision}}
  - name: path-context
    value: packages/mypy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mypy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mypy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mypy-extensions/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mypy-extensions
    pipelines.appstudio.openshift.io/type: build
  name: mypy-extensions-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mypy-extensions:{{revision}}
  - name: path-context
    value: packages/mypy-extensions
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mypy-extensions/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mypy-extensions",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/narwhals/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: narwhals
    pipelines.appstudio.openshift.io/type: build
  name: narwhals-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/narwhals:{{revision}}
  - name: path-context
    value: packages/narwhals
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/narwhals/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/narwhals",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/nest-asyncio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: nest-asyncio
    pipelines.appstudio.openshift.io/type: build
  name: nest-asyncio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/nest-asyncio:{{revision}}
  - name: path-context
    value: packages/nest-asyncio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/nest-asyncio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/nest-asyncio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/networkx/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: networkx
    pipelines.appstudio.openshift.io/type: build
  name: networkx-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/networkx:{{revision}}
  - name: path-context
    value: packages/networkx
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/networkx/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/networkx",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/ninja/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: ninja
    pipelines.appstudio.openshift.io/type: build
  name: ninja-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/ninja:{{revision}}
  - name: path-context
    value: packages/ninja
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/ninja/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/ninja",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/nodeenv/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: nodeenv
    pipelines.appstudio.openshift.io/type: build
  name: nodeenv-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/nodeenv:{{revision}}
  - name: path-context
    value: packages/nodeenv
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/nodeenv/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/nodeenv",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/numpy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: numpy
    pipelines.appstudio.openshift.io/type: build
  name: numpy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/numpy:{{revision}}
  - name: path-context
    value: packages/numpy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/numpy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/numpy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/oauth2client/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: oauth2client
    pipelines.appstudio.openshift.io/type: build
  name: oauth2client-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/oauth2client:{{revision}}
  - name: path-context
    value: packages/oauth2client
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/oauth2client/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/oauth2client",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/oauthlib/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: oauthlib
    pipelines.appstudio.openshift.io/type: build
  name: oauthlib-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/oauthlib:{{revision}}
  - name: path-context
    value: packages/oauthlib
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/oauthlib/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/oauthlib",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/openpyxl/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: openpyxl
    pipelines.appstudio.openshift.io/type: build
  name: openpyxl-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/openpyxl:{{revision}}
  - name: path-context
    value: packages/openpyxl
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/openpyxl/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/openpyxl",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/opentelemetry-exporter-otlp/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: opentelemetry-exporter-otlp
    pipelines.appstudio.openshift.io/type: build
  name: opentelemetry-exporter-otlp-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/opentelemetry-exporter-otlp:{{revision}}
  - name: path-context
    value: packages/opentelemetry-exporter-otlp
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/opentelemetry-exporter-otlp/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/opentelemetry-exporter-otlp",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/opentelemetry-instrumentation/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: opentelemetry-instrumentation
    pipelines.appstudio.openshift.io/type: build
  name: opentelemetry-instrumentation-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/opentelemetry-instrumentation:{{revision}}
  - name: path-context
    value: packages/opentelemetry-instrumentation
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/opentelemetry-instrumentation/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/opentelemetry-instrumentation",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/opentelemetry-instrumentation-requests/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: opentelemetry-instrumentation-requests
    pipelines.appstudio.openshift.io/type: build
  name: opentelemetry-instrumentation-requests-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/opentelemetry-instrumentation-requests:{{revision}}
  - name: path-context
    value: packages/opentelemetry-instrumentation-requests
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/opentelemetry-instrumentation-requests/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/opentelemetry-instrumentation-requests",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/opentelemetry-proto/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: opentelemetry-proto
    pipelines.appstudio.openshift.io/type: build
  name: opentelemetry-proto-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/opentelemetry-proto:{{revision}}
  - name: path-context
    value: packages/opentelemetry-proto
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/opentelemetry-proto/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/opentelemetry-proto",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/opentelemetry-sdk/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: opentelemetry-sdk
    pipelines.appstudio.openshift.io/type: build
  name: opentelemetry-sdk-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/opentelemetry-sdk:{{revision}}
  - name: path-context
    value: packages/opentelemetry-sdk
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/opentelemetry-sdk/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/opentelemetry-sdk",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/opentelemetry-util-http/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: opentelemetry-util-http
    pipelines.appstudio.openshift.io/type: build
  name: opentelemetry-util-http-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/opentelemetry-util-http:{{revision}}
  - name: path-context
    value: packages/opentelemetry-util-http
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/opentelemetry-util-http/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/opentelemetry-util-http",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/oscrypto/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: oscrypto
    pipelines.appstudio.openshift.io/type: build
  name: oscrypto-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/oscrypto:{{revision}}
  - name: path-context
    value: packages/oscrypto
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/oscrypto/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/oscrypto",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/overrides/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: overrides
    pipelines.appstudio.openshift.io/type: build
  name: overrides-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/overrides:{{revision}}
  - name: path-context
    value: packages/overrides
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/overrides/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/overrides",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/packaging/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: packaging
    pipelines.appstudio.openshift.io/type: build
  name: packaging-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/packaging:{{revision}}
  - name: path-context
    value: packages/packaging
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/packaging/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/packaging",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pandas/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pandas
    pipelines.appstudio.openshift.io/type: build
  name: pandas-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pandas:{{revision}}
  - name: path-context
    value: packages/pandas
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pandas/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pandas",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pandocfilters/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pandocfilters
    pipelines.appstudio.openshift.io/type: build
  name: pandocfilters-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pandocfilters:{{revision}}
  - name: path-context
    value: packages/pandocfilters
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pandocfilters/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pandocfilters",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/parso/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: parso
    pipelines.appstudio.openshift.io/type: build
  name: parso-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/parso:{{revision}}
  - name: path-context
    value: packages/parso
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/parso/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/parso",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/patchelf/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: patchelf
    pipelines.appstudio.openshift.io/type: build
  name: patchelf-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/patchelf:{{revision}}
  - name: path-context
    value: packages/patchelf
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/patchelf/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/patchelf",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pathspec/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pathspec
    pipelines.appstudio.openshift.io/type: build
  name: pathspec-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pathspec:{{revision}}
  - name: path-context
    value: packages/pathspec
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pathspec/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pathspec",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pbr/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pbr
    pipelines.appstudio.openshift.io/type: build
  name: pbr-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pbr:{{revision}}
  - name: path-context
    value: packages/pbr
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pbr/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pbr",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pexpect/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pexpect
    pipelines.appstudio.openshift.io/type: build
  name: pexpect-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pexpect:{{revision}}
  - name: path-context
    value: packages/pexpect
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pexpect/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pexpect",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pg8000/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pg8000
    pipelines.appstudio.openshift.io/type: build
  name: pg8000-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pg8000:{{revision}}
  - name: path-context
    value: packages/pg8000
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pg8000/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pg8000",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pillow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pillow
    pipelines.appstudio.openshift.io/type: build
  name: pillow-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pillow:{{revision}}
  - name: path-context
    value: packages/pillow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pillow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pillow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pinotdb/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pinotdb
    pipelines.appstudio.openshift.io/type: build
  name: pinotdb-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pinotdb:{{revision}}
  - name: path-context
    value: packages/pinotdb
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pinotdb/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pinotdb",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pip/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pip
    pipelines.appstudio.openshift.io/type: build
  name: pip-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pip:{{revision}}
  - name: path-context
    value: packages/pip
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pip/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pip",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pkginfo/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pkginfo
    pipelines.appstudio.openshift.io/type: build
  name: pkginfo-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pkginfo:{{revision}}
  - name: path-context
    value: packages/pkginfo
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pkginfo/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pkginfo",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pkgutil-resolve-name/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pkgutil-resolve-name
    pipelines.appstudio.openshift.io/type: build
  name: pkgutil-resolve-name-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pkgutil-resolve-name:{{revision}}
  - name: path-context
    value: packages/pkgutil-resolve-name
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pkgutil-resolve-name/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pkgutil-resolve-name",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/platformdirs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: platformdirs
    pipelines.appstudio.openshift.io/type: build
  name: platformdirs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/platformdirs:{{revision}}
  - name: path-context
    value: packages/platformdirs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/platformdirs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/platformdirs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pluggy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pluggy
    pipelines.appstudio.openshift.io/type: build
  name: pluggy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pluggy:{{revision}}
  - name: path-context
    value: packages/pluggy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pluggy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pluggy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/ply/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: ply
    pipelines.appstudio.openshift.io/type: build
  name: ply-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/ply:{{revision}}
  - name: path-context
    value: packages/ply
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/ply/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/ply",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/poetry-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: poetry-core
    pipelines.appstudio.openshift.io/type: build
  name: poetry-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/poetry-core:{{revision}}
  - name: path-context
    value: packages/poetry-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/poetry-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/poetry-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/poetry-plugin-export/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: poetry-plugin-export
    pipelines.appstudio.openshift.io/type: build
  name: poetry-plugin-export-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/poetry-plugin-export:{{revision}}
  - name: path-context
    value: packages/poetry-plugin-export
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/poetry-plugin-export/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/poetry-plugin-export",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pre-commit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pre-commit
    pipelines.appstudio.openshift.io/type: build
  name: pre-commit-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pre-commit:{{revision}}
  - name: path-context
    value: packages/pre-commit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pre-commit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pre-commit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/prometheus-client/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: prometheus-client
    pipelines.appstudio.openshift.io/type: build
  name: prometheus-client-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/prometheus-client:{{revision}}
  - name: path-context
    value: packages/prometheus-client
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/prometheus-client/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/prometheus-client",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/prompt-toolkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: prompt-toolkit
    pipelines.appstudio.openshift.io/type: build
  name: prompt-toolkit-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/prompt-toolkit:{{revision}}
  - name: path-context
    value: packages/prompt-toolkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/prompt-toolkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/prompt-toolkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/propcache/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: propcache
    pipelines.appstudio.openshift.io/type: build
  name: propcache-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/propcache:{{revision}}
  - name: path-context
    value: packages/propcache
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/propcache/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/propcache",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/protobuf/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: protobuf
    pipelines.appstudio.openshift.io/type: build
  name: protobuf-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/protobuf:{{revision}}
  - name: path-context
    value: packages/protobuf
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/protobuf/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/protobuf",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/psutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: psutil
    pipelines.appstudio.openshift.io/type: build
  name: psutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/psutil:{{revision}}
  - name: path-context
    value: packages/psutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/psutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/psutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/ptyprocess/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: ptyprocess
    pipelines.appstudio.openshift.io/type: build
  name: ptyprocess-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/ptyprocess:{{revision}}
  - name: path-context
    value: packages/ptyprocess
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/ptyprocess/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/ptyprocess",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pure-eval/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pure-eval
    pipelines.appstudio.openshift.io/type: build
  name: pure-eval-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pure-eval:{{revision}}
  - name: path-context
    value: packages/pure-eval
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pure-eval/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pure-eval",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/py4j/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: py4j
    pipelines.appstudio.openshift.io/type: build
  name: py4j-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/py4j:{{revision}}
  - name: path-context
    value: packages/py4j
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/py4j/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/py4j",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyasn1/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyasn1
    pipelines.appstudio.openshift.io/type: build
  name: pyasn1-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyasn1:{{revision}}
  - name: path-context
    value: packages/pyasn1
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyasn1/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyasn1",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyasn1-modules/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyasn1-modules
    pipelines.appstudio.openshift.io/type: build
  name: pyasn1-modules-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyasn1-modules:{{revision}}
  - name: path-context
    value: packages/pyasn1-modules
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyasn1-modules/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyasn1-modules",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pycodestyle/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pycodestyle
    pipelines.appstudio.openshift.io/type: build
  name: pycodestyle-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pycodestyle:{{revision}}
  - name: path-context
    value: packages/pycodestyle
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pycodestyle/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pycodestyle",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pycryptodomex/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pycryptodomex
    pipelines.appstudio.openshift.io/type: build
  name: pycryptodomex-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pycryptodomex:{{revision}}
  - name: path-context
    value: packages/pycryptodomex
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pycryptodomex/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pycryptodomex",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pydantic/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pydantic
    pipelines.appstudio.openshift.io/type: build
  name: pydantic-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pydantic:{{revision}}
  - name: path-context
    value: packages/pydantic
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pydantic/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pydantic",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pydantic-settings/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pydantic-settings
    pipelines.appstudio.openshift.io/type: build
  name: pydantic-settings-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pydantic-settings:{{revision}}
  - name: path-context
    value: packages/pydantic-settings
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pydantic-settings/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pydantic-settings",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyflakes/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyflakes
    pipelines.appstudio.openshift.io/type: build
  name: pyflakes-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyflakes:{{revision}}
  - name: path-context
    value: packages/pyflakes
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyflakes/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyflakes",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pygithub/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pygithub
    pipelines.appstudio.openshift.io/type: build
  name: pygithub-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pygithub:{{revision}}
  - name: path-context
    value: packages/pygithub
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pygithub/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pygithub",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pygments/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pygments
    pipelines.appstudio.openshift.io/type: build
  name: pygments-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pygments:{{revision}}
  - name: path-context
    value: packages/pygments
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pygments/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pygments",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyjwt/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyjwt
    pipelines.appstudio.openshift.io/type: build
  name: pyjwt-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyjwt:{{revision}}
  - name: path-context
    value: packages/pyjwt
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyjwt/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyjwt",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pymongo/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pymongo
    pipelines.appstudio.openshift.io/type: build
  name: pymongo-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pymongo:{{revision}}
  - name: path-context
    value: packages/pymongo
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pymongo/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pymongo",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyopenssl/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyopenssl
    pipelines.appstudio.openshift.io/type: build
  name: pyopenssl-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyopenssl:{{revision}}
  - name: path-context
    value: packages/pyopenssl
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyopenssl/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyopenssl",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyproject-api/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyproject-api
    pipelines.appstudio.openshift.io/type: build
  name: pyproject-api-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyproject-api:{{revision}}
  - name: path-context
    value: packages/pyproject-api
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyproject-api/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyproject-api",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyproject-hooks/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyproject-hooks
    pipelines.appstudio.openshift.io/type: build
  name: pyproject-hooks-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyproject-hooks:{{revision}}
  - name: path-context
    value: packages/pyproject-hooks
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyproject-hooks/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyproject-hooks",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyproject-metadata/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyproject-metadata
    pipelines.appstudio.openshift.io/type: build
  name: pyproject-metadata-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyproject-metadata:{{revision}}
  - name: path-context
    value: packages/pyproject-metadata
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyproject-metadata/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyproject-metadata",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyrsistent/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyrsistent
    pipelines.appstudio.openshift.io/type: build
  name: pyrsistent-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyrsistent:{{revision}}
  - name: path-context
    value: packages/pyrsistent
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyrsistent/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyrsistent",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyspark/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyspark
    pipelines.appstudio.openshift.io/type: build
  name: pyspark-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyspark:{{revision}}
  - name: path-context
    value: packages/pyspark
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyspark/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyspark",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pytest/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytest
    pipelines.appstudio.openshift.io/type: build
  name: pytest-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytest:{{revision}}
  - name: path-context
    value: packages/pytest
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytest/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytest",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pytest-asyncio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytest-asyncio
    pipelines.appstudio.openshift.io/type: build
  name: pytest-asyncio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytest-asyncio:{{revision}}
  - name: path-context
    value: packages/pytest-asyncio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytest-asyncio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytest-asyncio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pytest-cov/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytest-cov
    pipelines.appstudio.openshift.io/type: build
  name: pytest-cov-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytest-cov:{{revision}}
  - name: path-context
    value: packages/pytest-cov
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytest-cov/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytest-cov",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pytest-xdist/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytest-xdist
    pipelines.appstudio.openshift.io/type: build
  name: pytest-xdist-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytest-xdist:{{revision}}
  - name: path-context
    value: packages/pytest-xdist
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytest-xdist/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytest-xdist",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/python-dateutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-dateutil
    pipelines.appstudio.openshift.io/type: build
  name: python-dateutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-dateutil:{{revision}}
  - name: path-context
    value: packages/python-dateutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-dateutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-dateutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/python-dotenv/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-dotenv
    pipelines.appstudio.openshift.io/type: build
  name: python-dotenv-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-dotenv:{{revision}}
  - name: path-context
    value: packages/python-dotenv
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-dotenv/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-dotenv",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/python-json-logger/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-json-logger
    pipelines.appstudio.openshift.io/type: build
  name: python-json-logger-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-json-logger:{{revision}}
  - name: path-context
    value: packages/python-json-logger
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-json-logger/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-json-logger",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/python-multipart/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-multipart
    pipelines.appstudio.openshift.io/type: build
  name: python-multipart-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-multipart:{{revision}}
  - name: path-context
    value: packages/python-multipart
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-multipart/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-multipart",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/python-telegram-bot/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-telegram-bot
    pipelines.appstudio.openshift.io/type: build
  name: python-telegram-bot-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-telegram-bot:{{revision}}
  - name: path-context
    value: packages/python-telegram-bot
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-telegram-bot/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-telegram-bot",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pytz/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytz
    pipelines.appstudio.openshift.io/type: build
  name: pytz-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytz:{{revision}}
  - name: path-context
    value: packages/pytz
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytz/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytz",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyyaml/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyyaml
    pipelines.appstudio.openshift.io/type: build
  name: pyyaml-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyyaml:{{revision}}
  - name: path-context
    value: packages/pyyaml
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyyaml/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyyaml",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/readme-renderer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: readme-renderer
    pipelines.appstudio.openshift.io/type: build
  name: readme-renderer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/readme-renderer:{{revision}}
  - name: path-context
    value: packages/readme-renderer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/readme-renderer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/readme-renderer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/redis/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: redis
    pipelines.appstudio.openshift.io/type: build
  name: redis-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/redis:{{revision}}
  - name: path-context
    value: packages/redis
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/redis/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/redis",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/regex/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: regex
    pipelines.appstudio.openshift.io/type: build
  name: regex-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/regex:{{revision}}
  - name: path-context
    value: packages/regex
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/regex/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/regex",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/requests/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: requests
    pipelines.appstudio.openshift.io/type: build
  name: requests-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/requests:{{revision}}
  - name: path-context
    value: packages/requests
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/requests/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/requests",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/requests-aws4auth/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: requests-aws4auth
    pipelines.appstudio.openshift.io/type: build
  name: requests-aws4auth-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/requests-aws4auth:{{revision}}
  - name: path-context
    value: packages/requests-aws4auth
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/requests-aws4auth/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/requests-aws4auth",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/responses/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: responses
    pipelines.appstudio.openshift.io/type: build
  name: responses-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/responses:{{revision}}
  - name: path-context
    value: packages/responses
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/responses/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/responses",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/retry/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: retry
    pipelines.appstudio.openshift.io/type: build
  name: retry-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/retry:{{revision}}
  - name: path-context
    value: packages/retry
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/retry/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/retry",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rfc3339-validator/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rfc3339-validator
    pipelines.appstudio.openshift.io/type: build
  name: rfc3339-validator-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rfc3339-validator:{{revision}}
  - name: path-context
    value: packages/rfc3339-validator
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rfc3339-validator/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rfc3339-validator",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rfc3986/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rfc3986
    pipelines.appstudio.openshift.io/type: build
  name: rfc3986-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rfc3986:{{revision}}
  - name: path-context
    value: packages/rfc3986
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rfc3986/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rfc3986",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rfc3986-validator/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rfc3986-validator
    pipelines.appstudio.openshift.io/type: build
  name: rfc3986-validator-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rfc3986-validator:{{revision}}
  - name: path-context
    value: packages/rfc3986-validator
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rfc3986-validator/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rfc3986-validator",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rich/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rich
    pipelines.appstudio.openshift.io/type: build
  name: rich-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rich:{{revision}}
  - name: path-context
    value: packages/rich
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rich/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rich",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rich-toolkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rich-toolkit
    pipelines.appstudio.openshift.io/type: build
  name: rich-toolkit-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rich-toolkit:{{revision}}
  - name: path-context
    value: packages/rich-toolkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rich-toolkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rich-toolkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rsa/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rsa
    pipelines.appstudio.openshift.io/type: build
  name: rsa-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rsa:{{revision}}
  - name: path-context
    value: packages/rsa
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rsa/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rsa",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/s3fs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: s3fs
    pipelines.appstudio.openshift.io/type: build
  name: s3fs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/s3fs:{{revision}}
  - name: path-context
    value: packages/s3fs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/s3fs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/s3fs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/s3transfer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: s3transfer
    pipelines.appstudio.openshift.io/type: build
  name: s3transfer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/s3transfer:{{revision}}
  - name: path-context
    value: packages/s3transfer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/s3transfer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/s3transfer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/schema/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: schema
    pipelines.appstudio.openshift.io/type: build
  name: schema-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/schema:{{revision}}
  - name: path-context
    value: packages/schema
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/schema/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/schema",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/scikit-build-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: scikit-build-core
    pipelines.appstudio.openshift.io/type: build
  name: scikit-build-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/scikit-build-core:{{revision}}
  - name: path-context
    value: packages/scikit-build-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/scikit-build-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/scikit-build-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/scramp/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: scramp
    pipelines.appstudio.openshift.io/type: build
  name: scramp-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/scramp:{{revision}}
  - name: path-context
    value: packages/scramp
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/scramp/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/scramp",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/seaborn/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: seaborn
    pipelines.appstudio.openshift.io/type: build
  name: seaborn-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/seaborn:{{revision}}
  - name: path-context
    value: packages/seaborn
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/seaborn/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/seaborn",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/semver/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: semver
    pipelines.appstudio.openshift.io/type: build
  name: semver-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/semver:{{revision}}
  - name: path-context
    value: packages/semver
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/semver/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/semver",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sentry-sdk/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sentry-sdk
    pipelines.appstudio.openshift.io/type: build
  name: sentry-sdk-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sentry-sdk:{{revision}}
  - name: path-context
    value: packages/sentry-sdk
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sentry-sdk/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sentry-sdk",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/setproctitle/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: setproctitle
    pipelines.appstudio.openshift.io/type: build
  name: setproctitle-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/setproctitle:{{revision}}
  - name: path-context
    value: packages/setproctitle
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/setproctitle/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/setproctitle",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/setuptools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: setuptools
    pipelines.appstudio.openshift.io/type: build
  name: setuptools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/setuptools:{{revision}}
  - name: path-context
    value: packages/setuptools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/setuptools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/setuptools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/setuptools-scm/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: setuptools-scm
    pipelines.appstudio.openshift.io/type: build
  name: setuptools-scm-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/setuptools-scm:{{revision}}
  - name: path-context
    value: packages/setuptools-scm
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/setuptools-scm/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/setuptools-scm",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/shellingham/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: shellingham
    pipelines.appstudio.openshift.io/type: build
  name: shellingham-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/shellingham:{{revision}}
  - name: path-context
    value: packages/shellingham
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/shellingham/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/shellingham",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/simplejson/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: simplejson
    pipelines.appstudio.openshift.io/type: build
  name: simplejson-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/simplejson:{{revision}}
  - name: path-context
    value: packages/simplejson
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/simplejson/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/simplejson",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/six/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: six
    pipelines.appstudio.openshift.io/type: build
  name: six-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/six:{{revision}}
  - name: path-context
    value: packages/six
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/six/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/six",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/slack-sdk/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: slack-sdk
    pipelines.appstudio.openshift.io/type: build
  name: slack-sdk-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/slack-sdk:{{revision}}
  - name: path-context
    value: packages/slack-sdk
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/slack-sdk/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/slack-sdk",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/smart-open/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: smart-open
    pipelines.appstudio.openshift.io/type: build
  name: smart-open-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/smart-open:{{revision}}
  - name: path-context
    value: packages/smart-open
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/smart-open/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/smart-open",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/smmap/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: smmap
    pipelines.appstudio.openshift.io/type: build
  name: smmap-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/smmap:{{revision}}
  - name: path-context
    value: packages/smmap
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/smmap/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/smmap",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sniffio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sniffio
    pipelines.appstudio.openshift.io/type: build
  name: sniffio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sniffio:{{revision}}
  - name: path-context
    value: packages/sniffio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sniffio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sniffio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/snowflake-connector-python/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: snowflake-connector-python
    pipelines.appstudio.openshift.io/type: build
  name: snowflake-connector-python-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/snowflake-connector-python:{{revision}}
  - name: path-context
    value: packages/snowflake-connector-python
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/snowflake-connector-python/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/snowflake-connector-python",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sortedcontainers/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sortedcontainers
    pipelines.appstudio.openshift.io/type: build
  name: sortedcontainers-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sortedcontainers:{{revision}}
  - name: path-context
    value: packages/sortedcontainers
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sortedcontainers/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sortedcontainers",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/soupsieve/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: soupsieve
    pipelines.appstudio.openshift.io/type: build
  name: soupsieve-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/soupsieve:{{revision}}
  - name: path-context
    value: packages/soupsieve
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/soupsieve/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/soupsieve",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sphinx/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sphinx
    pipelines.appstudio.openshift.io/type: build
  name: sphinx-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sphinx:{{revision}}
  - name: path-context
    value: packages/sphinx
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sphinx/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sphinx",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sqlalchemy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sqlalchemy
    pipelines.appstudio.openshift.io/type: build
  name: sqlalchemy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sqlalchemy:{{revision}}
  - name: path-context
    value: packages/sqlalchemy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sqlalchemy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sqlalchemy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sqlalchemy-bigquery/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sqlalchemy-bigquery
    pipelines.appstudio.openshift.io/type: build
  name: sqlalchemy-bigquery-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sqlalchemy-bigquery:{{revision}}
  - name: path-context
    value: packages/sqlalchemy-bigquery
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sqlalchemy-bigquery/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sqlalchemy-bigquery",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sqlalchemy-spanner/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sqlalchemy-spanner
    pipelines.appstudio.openshift.io/type: build
  name: sqlalchemy-spanner-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sqlalchemy-spanner:{{revision}}
  - name: path-context
    value: packages/sqlalchemy-spanner
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sqlalchemy-spanner/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sqlalchemy-spanner",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sqlparse/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sqlparse
    pipelines.appstudio.openshift.io/type: build
  name: sqlparse-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sqlparse:{{revision}}
  - name: path-context
    value: packages/sqlparse
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sqlparse/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sqlparse",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sshtunnel/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sshtunnel
    pipelines.appstudio.openshift.io/type: build
  name: sshtunnel-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sshtunnel:{{revision}}
  - name: path-context
    value: packages/sshtunnel
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sshtunnel/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sshtunnel",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/stack-data/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: stack-data
    pipelines.appstudio.openshift.io/type: build
  name: stack-data-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/stack-data:{{revision}}
  - name: path-context
    value: packages/stack-data
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/stack-data/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/stack-data",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/starlette/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: starlette
    pipelines.appstudio.openshift.io/type: build
  name: starlette-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/starlette:{{revision}}
  - name: path-context
    value: packages/starlette
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/starlette/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/starlette",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tableauserverclient/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tableauserverclient
    pipelines.appstudio.openshift.io/type: build
  name: tableauserverclient-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tableauserverclient:{{revision}}
  - name: path-context
    value: packages/tableauserverclient
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tableauserverclient/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tableauserverclient",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tabulate/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tabulate
    pipelines.appstudio.openshift.io/type: build
  name: tabulate-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tabulate:{{revision}}
  - name: path-context
    value: packages/tabulate
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tabulate/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tabulate",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tblib/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tblib
    pipelines.appstudio.openshift.io/type: build
  name: tblib-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tblib:{{revision}}
  - name: path-context
    value: packages/tblib
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tblib/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tblib",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/termcolor/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: termcolor
    pipelines.appstudio.openshift.io/type: build
  name: termcolor-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/termcolor:{{revision}}
  - name: path-context
    value: packages/termcolor
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/termcolor/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/termcolor",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/terminado/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: terminado
    pipelines.appstudio.openshift.io/type: build
  name: terminado-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/terminado:{{revision}}
  - name: path-context
    value: packages/terminado
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/terminado/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/terminado",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/threadpoolctl/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: threadpoolctl
    pipelines.appstudio.openshift.io/type: build
  name: threadpoolctl-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/threadpoolctl:{{revision}}
  - name: path-context
    value: packages/threadpoolctl
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/threadpoolctl/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/threadpoolctl",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/thriftpy2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: thriftpy2
    pipelines.appstudio.openshift.io/type: build
  name: thriftpy2-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/thriftpy2:{{revision}}
  - name: path-context
    value: packages/thriftpy2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/thriftpy2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/thriftpy2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tinycss2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tinycss2
    pipelines.appstudio.openshift.io/type: build
  name: tinycss2-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tinycss2:{{revision}}
  - name: path-context
    value: packages/tinycss2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tinycss2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tinycss2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/toml/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: toml
    pipelines.appstudio.openshift.io/type: build
  name: toml-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/toml:{{revision}}
  - name: path-context
    value: packages/toml
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/toml/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/toml",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tomlkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tomlkit
    pipelines.appstudio.openshift.io/type: build
  name: tomlkit-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tomlkit:{{revision}}
  - name: path-context
    value: packages/tomlkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tomlkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tomlkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/toolz/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: toolz
    pipelines.appstudio.openshift.io/type: build
  name: toolz-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/toolz:{{revision}}
  - name: path-context
    value: packages/toolz
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/toolz/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/toolz",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tornado/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tornado
    pipelines.appstudio.openshift.io/type: build
  name: tornado-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tornado:{{revision}}
  - name: path-context
    value: packages/tornado
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tornado/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tornado",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tox/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tox
    pipelines.appstudio.openshift.io/type: build
  name: tox-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tox:{{revision}}
  - name: path-context
    value: packages/tox
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tox/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tox",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tqdm/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tqdm
    pipelines.appstudio.openshift.io/type: build
  name: tqdm-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tqdm:{{revision}}
  - name: path-context
    value: packages/tqdm
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tqdm/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tqdm",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/traitlets/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: traitlets
    pipelines.appstudio.openshift.io/type: build
  name: traitlets-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/traitlets:{{revision}}
  - name: path-context
    value: packages/traitlets
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/traitlets/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/traitlets",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/trove-classifiers/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: trove-classifiers
    pipelines.appstudio.openshift.io/type: build
  name: trove-classifiers-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/trove-classifiers:{{revision}}
  - name: path-context
    value: packages/trove-classifiers
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/trove-classifiers/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/trove-classifiers",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/typeguard/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typeguard
    pipelines.appstudio.openshift.io/type: build
  name: typeguard-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typeguard:{{revision}}
  - name: path-context
    value: packages/typeguard
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typeguard/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typeguard",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/typer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typer
    pipelines.appstudio.openshift.io/type: build
  name: typer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typer:{{revision}}
  - name: path-context
    value: packages/typer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-protobuf/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-protobuf
    pipelines.appstudio.openshift.io/type: build
  name: types-protobuf-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-protobuf:{{revision}}
  - name: path-context
    value: packages/types-protobuf
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-protobuf/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-protobuf",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-psutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-psutil
    pipelines.appstudio.openshift.io/type: build
  name: types-psutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-psutil:{{revision}}
  - name: path-context
    value: packages/types-psutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-psutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-psutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-python-dateutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-python-dateutil
    pipelines.appstudio.openshift.io/type: build
  name: types-python-dateutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-python-dateutil:{{revision}}
  - name: path-context
    value: packages/types-python-dateutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-python-dateutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-python-dateutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-pytz/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-pytz
    pipelines.appstudio.openshift.io/type: build
  name: types-pytz-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-pytz:{{revision}}
  - name: path-context
    value: packages/types-pytz
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-pytz/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-pytz",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-pyyaml/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-pyyaml
    pipelines.appstudio.openshift.io/type: build
  name: types-pyyaml-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-pyyaml:{{revision}}
  - name: path-context
    value: packages/types-pyyaml
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-pyyaml/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-pyyaml",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-requests/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-requests
    pipelines.appstudio.openshift.io/type: build
  name: types-requests-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-requests:{{revision}}
  - name: path-context
    value: packages/types-requests
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-requests/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-requests",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-setuptools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-setuptools
    pipelines.appstudio.openshift.io/type: build
  name: types-setuptools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-setuptools:{{revision}}
  - name: path-context
    value: packages/types-setuptools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-setuptools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-setuptools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/typing-extensions/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typing-extensions
    pipelines.appstudio.openshift.io/type: build
  name: typing-extensions-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typing-extensions:{{revision}}
  - name: path-context
    value: packages/typing-extensions
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typing-extensions/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typing-extensions",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/typing-inspect/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typing-inspect
    pipelines.appstudio.openshift.io/type: build
  name: typing-inspect-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typing-inspect:{{revision}}
  - name: path-context
    value: packages/typing-inspect
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typing-inspect/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typing-inspect",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/typing-inspection/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typing-inspection
    pipelines.appstudio.openshift.io/type: build
  name: typing-inspection-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typing-inspection:{{revision}}
  - name: path-context
    value: packages/typing-inspection
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typing-inspection/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typing-inspection",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tzdata/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tzdata
    pipelines.appstudio.openshift.io/type: build
  name: tzdata-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tzdata:{{revision}}
  - name: path-context
    value: packages/tzdata
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tzdata/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tzdata",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tzlocal/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tzlocal
    pipelines.appstudio.openshift.io/type: build
  name: tzlocal-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tzlocal:{{revision}}
  - name: path-context
    value: packages/tzlocal
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tzlocal/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tzlocal",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/urllib3/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: urllib3
    pipelines.appstudio.openshift.io/type: build
  name: urllib3-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/urllib3:{{revision}}
  - name: path-context
    value: packages/urllib3
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/urllib3/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/urllib3",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/uvicorn/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: uvicorn
    pipelines.appstudio.openshift.io/type: build
  name: uvicorn-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/uvicorn:{{revision}}
  - name: path-context
    value: packages/uvicorn
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/uvicorn/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/uvicorn",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/virtualenv/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: virtualenv
    pipelines.appstudio.openshift.io/type: build
  name: virtualenv-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/virtualenv:{{revision}}
  - name: path-context
    value: packages/virtualenv
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/virtualenv/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/virtualenv",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/wcwidth/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: wcwidth
    pipelines.appstudio.openshift.io/type: build
  name: wcwidth-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/wcwidth:{{revision}}
  - name: path-context
    value: packages/wcwidth
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/wcwidth/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/wcwidth",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/weaviate-client/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: weaviate-client
    pipelines.appstudio.openshift.io/type: build
  name: weaviate-client-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/weaviate-client:{{revision}}
  - name: path-context
    value: packages/weaviate-client
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/weaviate-client/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/weaviate-client",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/webcolors/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: webcolors
    pipelines.appstudio.openshift.io/type: build
  name: webcolors-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/webcolors:{{revision}}
  - name: path-context
    value: packages/webcolors
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/webcolors/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/webcolors",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/webencodings/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: webencodings
    pipelines.appstudio.openshift.io/type: build
  name: webencodings-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/webencodings:{{revision}}
  - name: path-context
    value: packages/webencodings
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/webencodings/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/webencodings",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/websocket-client/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: websocket-client
    pipelines.appstudio.openshift.io/type: build
  name: websocket-client-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/websocket-client:{{revision}}
  - name: path-context
    value: packages/websocket-client
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/websocket-client/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/websocket-client",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/websockets/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: websockets
    pipelines.appstudio.openshift.io/type: build
  name: websockets-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/websockets:{{revision}}
  - name: path-context
    value: packages/websockets
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/websockets/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/websockets",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/wheel/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: wheel
    pipelines.appstudio.openshift.io/type: build
  name: wheel-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/wheel:{{revision}}
  - name: path-context
    value: packages/wheel
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/wheel/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/wheel",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/widgetsnbextension/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: widgetsnbextension
    pipelines.appstudio.openshift.io/type: build
  name: widgetsnbextension-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/widgetsnbextension:{{revision}}
  - name: path-context
    value: packages/widgetsnbextension
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/widgetsnbextension/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/widgetsnbextension",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/wrapt/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: wrapt
    pipelines.appstudio.openshift.io/type: build
  name: wrapt-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/wrapt:{{revision}}
  - name: path-context
    value: packages/wrapt
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/wrapt/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/wrapt",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/xmltodict/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: xmltodict
    pipelines.appstudio.openshift.io/type: build
  name: xmltodict-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/xmltodict:{{revision}}
  - name: path-context
    value: packages/xmltodict
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/xmltodict/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/xmltodict",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/xyzservices/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: xyzservices
    pipelines.appstudio.openshift.io/type: build
  name: xyzservices-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/xyzservices:{{revision}}
  - name: path-context
    value: packages/xyzservices
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/xyzservices/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/xyzservices",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/yamllint/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: yamllint
    pipelines.appstudio.openshift.io/type: build
  name: yamllint-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/yamllint:{{revision}}
  - name: path-context
    value: packages/yamllint
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/yamllint/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/yamllint",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/yandexcloud/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: yandexcloud
    pipelines.appstudio.openshift.io/type: build
  name: yandexcloud-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/yandexcloud:{{revision}}
  - name: path-context
    value: packages/yandexcloud
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/yandexcloud/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/yandexcloud",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/yarl/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: yarl
    pipelines.appstudio.openshift.io/type: build
  name: yarl-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/yarl:{{revision}}
  - name: path-context
    value: packages/yarl
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/yarl/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/yarl",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/zipp/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: zipp
    pipelines.appstudio.openshift.io/type: build
  name: zipp-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/zipp:{{revision}}
  - name: path-context
    value: packages/zipp
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/zipp/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/zipp",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/zstandard/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: zstandard
    pipelines.appstudio.openshift.io/type: build
  name: zstandard-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/zstandard:{{revision}}
  - name: path-context
    value: packages/zstandard
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/zstandard/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/zstandard",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
