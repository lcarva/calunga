---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/anyio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: anyio
    pipelines.appstudio.openshift.io/type: build
  name: anyio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/anyio:{{revision}}
  - name: path-context
    value: packages/anyio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/anyio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/anyio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/arrow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: arrow
    pipelines.appstudio.openshift.io/type: build
  name: arrow-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/arrow:{{revision}}
  - name: path-context
    value: packages/arrow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/arrow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/arrow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/attrs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: attrs
    pipelines.appstudio.openshift.io/type: build
  name: attrs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/attrs:{{revision}}
  - name: path-context
    value: packages/attrs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/attrs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/attrs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/beautifulsoup4/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: beautifulsoup4
    pipelines.appstudio.openshift.io/type: build
  name: beautifulsoup4-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/beautifulsoup4:{{revision}}
  - name: path-context
    value: packages/beautifulsoup4
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/beautifulsoup4/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/beautifulsoup4",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/black/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: black
    pipelines.appstudio.openshift.io/type: build
  name: black-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/black:{{revision}}
  - name: path-context
    value: packages/black
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/black/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/black",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/blinker/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: blinker
    pipelines.appstudio.openshift.io/type: build
  name: blinker-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/blinker:{{revision}}
  - name: path-context
    value: packages/blinker
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/blinker/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/blinker",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/bokeh/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: bokeh
    pipelines.appstudio.openshift.io/type: build
  name: bokeh-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/bokeh:{{revision}}
  - name: path-context
    value: packages/bokeh
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/bokeh/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/bokeh",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/cachetools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: cachetools
    pipelines.appstudio.openshift.io/type: build
  name: cachetools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/cachetools:{{revision}}
  - name: path-context
    value: packages/cachetools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/cachetools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/cachetools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/calver/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: calver
    pipelines.appstudio.openshift.io/type: build
  name: calver-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/calver:{{revision}}
  - name: path-context
    value: packages/calver
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/calver/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/calver",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/chardet/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: chardet
    pipelines.appstudio.openshift.io/type: build
  name: chardet-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/chardet:{{revision}}
  - name: path-context
    value: packages/chardet
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/chardet/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/chardet",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/charset-normalizer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: charset-normalizer
    pipelines.appstudio.openshift.io/type: build
  name: charset-normalizer-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/charset-normalizer:{{revision}}
  - name: path-context
    value: packages/charset-normalizer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/charset-normalizer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/charset-normalizer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/click/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: click
    pipelines.appstudio.openshift.io/type: build
  name: click-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/click:{{revision}}
  - name: path-context
    value: packages/click
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/click/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/click",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/colorama/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: colorama
    pipelines.appstudio.openshift.io/type: build
  name: colorama-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/colorama:{{revision}}
  - name: path-context
    value: packages/colorama
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/colorama/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/colorama",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/distlib/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: distlib
    pipelines.appstudio.openshift.io/type: build
  name: distlib-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/distlib:{{revision}}
  - name: path-context
    value: packages/distlib
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/distlib/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/distlib",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/django/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: django
    pipelines.appstudio.openshift.io/type: build
  name: django-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/django:{{revision}}
  - name: path-context
    value: packages/django
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/django/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/django",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/docutils/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: docutils
    pipelines.appstudio.openshift.io/type: build
  name: docutils-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/docutils:{{revision}}
  - name: path-context
    value: packages/docutils
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/docutils/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/docutils",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/filelock/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: filelock
    pipelines.appstudio.openshift.io/type: build
  name: filelock-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/filelock:{{revision}}
  - name: path-context
    value: packages/filelock
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/filelock/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/filelock",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/freezegun/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: freezegun
    pipelines.appstudio.openshift.io/type: build
  name: freezegun-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/freezegun:{{revision}}
  - name: path-context
    value: packages/freezegun
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/freezegun/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/freezegun",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hatch-fancy-pypi-readme/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatch-fancy-pypi-readme
    pipelines.appstudio.openshift.io/type: build
  name: hatch-fancy-pypi-readme-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatch-fancy-pypi-readme:{{revision}}
  - name: path-context
    value: packages/hatch-fancy-pypi-readme
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatch-fancy-pypi-readme/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatch-fancy-pypi-readme",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hatch-vcs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatch-vcs
    pipelines.appstudio.openshift.io/type: build
  name: hatch-vcs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatch-vcs:{{revision}}
  - name: path-context
    value: packages/hatch-vcs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatch-vcs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatch-vcs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/hatchling/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatchling
    pipelines.appstudio.openshift.io/type: build
  name: hatchling-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatchling:{{revision}}
  - name: path-context
    value: packages/hatchling
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatchling/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatchling",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/httpcore/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httpcore
    pipelines.appstudio.openshift.io/type: build
  name: httpcore-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httpcore:{{revision}}
  - name: path-context
    value: packages/httpcore
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httpcore/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httpcore",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/httpx/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httpx
    pipelines.appstudio.openshift.io/type: build
  name: httpx-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httpx:{{revision}}
  - name: path-context
    value: packages/httpx
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httpx/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httpx",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/humanize/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: humanize
    pipelines.appstudio.openshift.io/type: build
  name: humanize-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/humanize:{{revision}}
  - name: path-context
    value: packages/humanize
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/humanize/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/humanize",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/idna/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: idna
    pipelines.appstudio.openshift.io/type: build
  name: idna-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/idna:{{revision}}
  - name: path-context
    value: packages/idna
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/idna/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/idna",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/iniconfig/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: iniconfig
    pipelines.appstudio.openshift.io/type: build
  name: iniconfig-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/iniconfig:{{revision}}
  - name: path-context
    value: packages/iniconfig
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/iniconfig/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/iniconfig",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/isort/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: isort
    pipelines.appstudio.openshift.io/type: build
  name: isort-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/isort:{{revision}}
  - name: path-context
    value: packages/isort
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/isort/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/isort",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/jinja2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jinja2
    pipelines.appstudio.openshift.io/type: build
  name: jinja2-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jinja2:{{revision}}
  - name: path-context
    value: packages/jinja2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jinja2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jinja2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/loguru/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: loguru
    pipelines.appstudio.openshift.io/type: build
  name: loguru-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/loguru:{{revision}}
  - name: path-context
    value: packages/loguru
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/loguru/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/loguru",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/markdown/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markdown
    pipelines.appstudio.openshift.io/type: build
  name: markdown-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markdown:{{revision}}
  - name: path-context
    value: packages/markdown
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markdown/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markdown",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/markdown-it-py/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markdown-it-py
    pipelines.appstudio.openshift.io/type: build
  name: markdown-it-py-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markdown-it-py:{{revision}}
  - name: path-context
    value: packages/markdown-it-py
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markdown-it-py/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markdown-it-py",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/markupsafe/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markupsafe
    pipelines.appstudio.openshift.io/type: build
  name: markupsafe-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markupsafe:{{revision}}
  - name: path-context
    value: packages/markupsafe
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markupsafe/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markupsafe",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/marshmallow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: marshmallow
    pipelines.appstudio.openshift.io/type: build
  name: marshmallow-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/marshmallow:{{revision}}
  - name: path-context
    value: packages/marshmallow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/marshmallow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/marshmallow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mdurl/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mdurl
    pipelines.appstudio.openshift.io/type: build
  name: mdurl-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mdurl:{{revision}}
  - name: path-context
    value: packages/mdurl
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mdurl/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mdurl",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/meson-python/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: meson-python
    pipelines.appstudio.openshift.io/type: build
  name: meson-python-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/meson-python:{{revision}}
  - name: path-context
    value: packages/meson-python
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/meson-python/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/meson-python",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/more-itertools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: more-itertools
    pipelines.appstudio.openshift.io/type: build
  name: more-itertools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/more-itertools:{{revision}}
  - name: path-context
    value: packages/more-itertools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/more-itertools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/more-itertools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mypy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mypy
    pipelines.appstudio.openshift.io/type: build
  name: mypy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mypy:{{revision}}
  - name: path-context
    value: packages/mypy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mypy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mypy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/mypy-extensions/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: mypy-extensions
    pipelines.appstudio.openshift.io/type: build
  name: mypy-extensions-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/mypy-extensions:{{revision}}
  - name: path-context
    value: packages/mypy-extensions
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/mypy-extensions/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/mypy-extensions",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/ninja/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: ninja
    pipelines.appstudio.openshift.io/type: build
  name: ninja-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/ninja:{{revision}}
  - name: path-context
    value: packages/ninja
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/ninja/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/ninja",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/numpy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: numpy
    pipelines.appstudio.openshift.io/type: build
  name: numpy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/numpy:{{revision}}
  - name: path-context
    value: packages/numpy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/numpy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/numpy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/packaging/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: packaging
    pipelines.appstudio.openshift.io/type: build
  name: packaging-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/packaging:{{revision}}
  - name: path-context
    value: packages/packaging
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/packaging/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/packaging",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/patchelf/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: patchelf
    pipelines.appstudio.openshift.io/type: build
  name: patchelf-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/patchelf:{{revision}}
  - name: path-context
    value: packages/patchelf
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/patchelf/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/patchelf",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pathspec/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pathspec
    pipelines.appstudio.openshift.io/type: build
  name: pathspec-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pathspec:{{revision}}
  - name: path-context
    value: packages/pathspec
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pathspec/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pathspec",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/platformdirs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: platformdirs
    pipelines.appstudio.openshift.io/type: build
  name: platformdirs-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/platformdirs:{{revision}}
  - name: path-context
    value: packages/platformdirs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/platformdirs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/platformdirs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pluggy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pluggy
    pipelines.appstudio.openshift.io/type: build
  name: pluggy-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pluggy:{{revision}}
  - name: path-context
    value: packages/pluggy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pluggy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pluggy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/prompt-toolkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: prompt-toolkit
    pipelines.appstudio.openshift.io/type: build
  name: prompt-toolkit-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/prompt-toolkit:{{revision}}
  - name: path-context
    value: packages/prompt-toolkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/prompt-toolkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/prompt-toolkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pygments/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pygments
    pipelines.appstudio.openshift.io/type: build
  name: pygments-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pygments:{{revision}}
  - name: path-context
    value: packages/pygments
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pygments/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pygments",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyproject-api/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyproject-api
    pipelines.appstudio.openshift.io/type: build
  name: pyproject-api-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyproject-api:{{revision}}
  - name: path-context
    value: packages/pyproject-api
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyproject-api/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyproject-api",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pyproject-metadata/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pyproject-metadata
    pipelines.appstudio.openshift.io/type: build
  name: pyproject-metadata-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pyproject-metadata:{{revision}}
  - name: path-context
    value: packages/pyproject-metadata
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pyproject-metadata/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pyproject-metadata",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/pytest/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytest
    pipelines.appstudio.openshift.io/type: build
  name: pytest-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytest:{{revision}}
  - name: path-context
    value: packages/pytest
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytest/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytest",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/python-dateutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-dateutil
    pipelines.appstudio.openshift.io/type: build
  name: python-dateutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-dateutil:{{revision}}
  - name: path-context
    value: packages/python-dateutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-dateutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-dateutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/requests/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: requests
    pipelines.appstudio.openshift.io/type: build
  name: requests-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/requests:{{revision}}
  - name: path-context
    value: packages/requests
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/requests/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/requests",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/rich/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rich
    pipelines.appstudio.openshift.io/type: build
  name: rich-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rich:{{revision}}
  - name: path-context
    value: packages/rich
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rich/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rich",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/scikit-build-core/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: scikit-build-core
    pipelines.appstudio.openshift.io/type: build
  name: scikit-build-core-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/scikit-build-core:{{revision}}
  - name: path-context
    value: packages/scikit-build-core
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/scikit-build-core/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/scikit-build-core",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/setuptools-scm/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: setuptools-scm
    pipelines.appstudio.openshift.io/type: build
  name: setuptools-scm-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/setuptools-scm:{{revision}}
  - name: path-context
    value: packages/setuptools-scm
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/setuptools-scm/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/setuptools-scm",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sniffio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sniffio
    pipelines.appstudio.openshift.io/type: build
  name: sniffio-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sniffio:{{revision}}
  - name: path-context
    value: packages/sniffio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sniffio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sniffio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/soupsieve/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: soupsieve
    pipelines.appstudio.openshift.io/type: build
  name: soupsieve-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/soupsieve:{{revision}}
  - name: path-context
    value: packages/soupsieve
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/soupsieve/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/soupsieve",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/sqlparse/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: sqlparse
    pipelines.appstudio.openshift.io/type: build
  name: sqlparse-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/sqlparse:{{revision}}
  - name: path-context
    value: packages/sqlparse
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/sqlparse/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/sqlparse",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tomlkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tomlkit
    pipelines.appstudio.openshift.io/type: build
  name: tomlkit-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tomlkit:{{revision}}
  - name: path-context
    value: packages/tomlkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tomlkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tomlkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tox/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tox
    pipelines.appstudio.openshift.io/type: build
  name: tox-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tox:{{revision}}
  - name: path-context
    value: packages/tox
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tox/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tox",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/tqdm/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tqdm
    pipelines.appstudio.openshift.io/type: build
  name: tqdm-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tqdm:{{revision}}
  - name: path-context
    value: packages/tqdm
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tqdm/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tqdm",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/trove-classifiers/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: trove-classifiers
    pipelines.appstudio.openshift.io/type: build
  name: trove-classifiers-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/trove-classifiers:{{revision}}
  - name: path-context
    value: packages/trove-classifiers
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/trove-classifiers/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/trove-classifiers",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-psutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-psutil
    pipelines.appstudio.openshift.io/type: build
  name: types-psutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-psutil:{{revision}}
  - name: path-context
    value: packages/types-psutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-psutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-psutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-python-dateutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-python-dateutil
    pipelines.appstudio.openshift.io/type: build
  name: types-python-dateutil-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-python-dateutil:{{revision}}
  - name: path-context
    value: packages/types-python-dateutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-python-dateutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-python-dateutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/types-setuptools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: types-setuptools
    pipelines.appstudio.openshift.io/type: build
  name: types-setuptools-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/types-setuptools:{{revision}}
  - name: path-context
    value: packages/types-setuptools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/types-setuptools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/types-setuptools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/typing-extensions/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typing-extensions
    pipelines.appstudio.openshift.io/type: build
  name: typing-extensions-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typing-extensions:{{revision}}
  - name: path-context
    value: packages/typing-extensions
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typing-extensions/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typing-extensions",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/urllib3/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: urllib3
    pipelines.appstudio.openshift.io/type: build
  name: urllib3-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/urllib3:{{revision}}
  - name: path-context
    value: packages/urllib3
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/urllib3/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/urllib3",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/virtualenv/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: virtualenv
    pipelines.appstudio.openshift.io/type: build
  name: virtualenv-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/virtualenv:{{revision}}
  - name: path-context
    value: packages/virtualenv
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/virtualenv/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/virtualenv",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-path-change: "[packages/wheel/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: wheel
    pipelines.appstudio.openshift.io/type: build
  name: wheel-on-push
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/wheel:{{revision}}
  - name: path-context
    value: packages/wheel
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/wheel/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/wheel",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
